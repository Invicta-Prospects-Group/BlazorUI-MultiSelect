@using System.Collections.Immutable
@using Telerik.Blazor.Components
@using Telerik.Blazor
@using StateManagement.Fields.Actions

@inherits DynamicFieldBase
@inject IDispatcher Dispatcher

@Name

<br />

<TelerikMultiSelect Data="@PaxData"
                    TextField="FullName"
                    ValueField="PaxId"
                    Value="@((List<string>?)Field?.Value)"
                    ValueChanged="@((List<string>? v) => MyValueChangeHandler(v))"
                    Enabled="true"
                    ClearButton="true"
                    AutoClose="false"
                    Filterable="true"
                    FilterOperator="StringFilterOperator.Contains">
</TelerikMultiSelect>

<button class="btn btn-outline-info" @onclick="ClearSelection">Clear Selection</button>

@code {
    private void MyValueChangeHandler(List<string>? theUserChoice)
    {
        if (theUserChoice is not null)
            ChangeFieldValue(theUserChoice);
    }
    private void ClearSelection()
    {
        Dispatcher.Dispatch(new FieldClearAction(FieldId));
    }
}
